We have seen that exact inference on a graph comprising a chain of nodes can be
performed efficiently in time that is linear in the number of nodes, using an algorithm
8.4. Inference in Graphical Models
399
Figure 8.39 Examples
tree-
structured graphs, showing (a) an
undirected tree, (b) a directed tree,
and (c) a directed polytree.
of
(a)
(b)
(c)
Exercise 8.18
that can be interpreted in terms of messages passed along the chain. More generally,
inference can be performed efficiently using local message passing on a broader
class of graphs called trees. In particular, we shall shortly generalize the message
passing formalism derived above for chains to give the sum-product algorithm, which
provides an efficient framework for exact inference in tree-structured graphs.
In the case of an undirected graph, a tree is defined as a graph in which there
is one, and only one, path between any pair of nodes. Such graphs therefore do not
have loops. In the case of directed graphs, a tree is defined such that there is a single
node, called the root, which has no parents, and all other nodes have one parent. If
we convert a directed tree into an undirected graph, we see that the moralization step
will not add any links as all nodes have at most one parent, and as a consequence the
corresponding moralized graph will be an undirected tree. Examples of undirected
and directed trees are shown in Figure 8.39(a) and 8.39(b). Note that a distribution
represented as a directed tree can easily be converted into one represented by an
undirected tree, and vice versa.
If there are nodes in a directed graph that have more than one parent, but there is
still only one path (ignoring the direction of the arrows) between any two nodes, then
the graph is a called a polytree, as illustrated in Figure 8.39(c). Such a graph will
have more than one node with the property of having no parents, and furthermore,
the corresponding moralized undirected graph will have loops.
