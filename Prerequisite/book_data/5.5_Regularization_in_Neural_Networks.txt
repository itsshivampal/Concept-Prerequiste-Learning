The number of input and outputs units in a neural network is generally determined
by the dimensionality of the data set, whereas the number M of hidden units is a free
parameter that can be adjusted to give the best predictive performance. Note that M
controls the number of parameters (weights and biases) in the network, and so we
might expect that in a maximum likelihood setting there will be an optimum value
of M that gives the best generalization performance, corresponding to the optimum
balance between under-fitting and over-fitting. Figure 5.9 shows an example of the
effect of different values of M for the sinusoidal regression problem.
The generalization error, however, is not a simple function of M due to the
presence of local minima in the error function, as illustrated in Figure 5.10. Here
we see the effect of choosing multiple random initializations for the weight vector
for a range of values of M. The overall best validation set performance in this
case occurred for a particular solution having M = 8. In practice, one approach to
choosing M is in fact to plot a graph of the kind shown in Figure 5.10 and then to
choose the specific solution having the smallest validation set error.
There are, however, other ways to control the complexity of a neural network
model in order to avoid over-fitting. From our discussion of polynomial curve fitting
in Chapter 1, we see that an alternative approach is to choose a relatively large value
for M and then to control complexity by the addition of a regularization term to the
error function. The simplest regularizer is the quadratic, giving a regularized error
of the form
E(w) = E(w) + λ
2
wTw.
(5.112)
This regularizer is also known as weight decay and has been discussed at length
in Chapter 3. The effective model complexity is then determined by the choice of
the regularization coefficient λ. As we have seen previously, this regularizer can be
interpreted as the negative logarithm of a zero-mean Gaussian prior distribution over
the weight vector w.
